(undo-tree-save-format-version . 1)
"79101cfacd4f0a19c37e0571903fca2abe9ffcb8"
[nil nil nil nil (25848 53125 582656 0) 0 nil]
([nil nil ((#("{-# LANGUAGE Trustworthy #-}" 0 28 (fontified t face haskell-pragma-face)) . 130) (t 25589 27841 985684 552000)) nil (25848 53125 582655 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -129) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 130) nil (25848 53125 582648 0) 0 nil])
([nil nil ((#("#if __GLASGOW_HASKELL__ < 804
import Data.Semigroup (Semigroup(..))
#endif
" 0 1 (syntax-table (1) fontified t face font-lock-preprocessor-face) 1 24 (fontified t face font-lock-preprocessor-face) 24 25 (syntax-table (1) fontified t face font-lock-preprocessor-face) 25 26 (fontified t face font-lock-preprocessor-face) 26 29 (syntax-table (2) fontified t face font-lock-preprocessor-face) 29 30 (fontified t font-lock-multiline t face font-lock-preprocessor-face) 30 36 (fontified t face haskell-keyword-face) 36 37 (fontified t) 37 51 (fontified t face haskell-constructor-face) 51 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-1-face)) 53 62 (fontified t face haskell-constructor-face) 62 63 (fontified t face (rainbow-delimiters-depth-2-face)) 63 65 (syntax-table (1) fontified t face haskell-operator-face) 65 66 (fontified t face (rainbow-delimiters-depth-2-face)) 66 67 (fontified t face (rainbow-delimiters-depth-1-face)) 67 68 (fontified t) 68 69 (syntax-table (1) fontified t face font-lock-preprocessor-face) 69 74 (fontified t face font-lock-preprocessor-face) 74 75 (fontified t font-lock-multiline t face font-lock-preprocessor-face)) . 1157) (undo-tree-id98 . -75) (undo-tree-id99 . -17) (undo-tree-id100 . -28) (undo-tree-id101 . -29) (undo-tree-id102 . -29) (undo-tree-id103 . -75) 1232 (t 25848 53125 584189 921000)) nil (25848 53133 226152 0) 0 nil])
([nil nil ((#("#else
    liftReadsPrec _ r _ s = r s >>= \\case
      ([], _) -> []
      (as, s') -> return (NonEmptyVector $ V.fromList as, s')
#endif
" 0 1 (fontified t syntax-table (1) face font-lock-preprocessor-face) 1 5 (fontified t face font-lock-preprocessor-face) 5 6 (fontified t font-lock-multiline t face font-lock-preprocessor-face) 6 24 (fontified t) 24 25 (fontified t face haskell-keyword-face) 25 28 (fontified t) 28 29 (fontified t face haskell-keyword-face) 29 32 (fontified t) 32 33 (fontified t syntax-table (1) face haskell-operator-face) 33 38 (fontified t) 38 41 (fontified t syntax-table (1) face haskell-operator-face) 41 42 (fontified t) 42 43 (fontified t syntax-table (1) face haskell-operator-face) 43 47 (fontified t face haskell-keyword-face) 47 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 56 (fontified t face (rainbow-delimiters-depth-2-face haskell-constructor-face)) 56 57 (fontified t face (rainbow-delimiters-depth-2-face haskell-constructor-face)) 57 59 (fontified t) 59 60 (fontified t face haskell-keyword-face) 60 61 (fontified t face (rainbow-delimiters-depth-1-face)) 61 62 (fontified t) 62 64 (fontified t syntax-table (1) face haskell-operator-face) 64 65 (fontified t) 65 66 (fontified t face (rainbow-delimiters-depth-1-face haskell-constructor-face)) 66 67 (fontified t face (rainbow-delimiters-depth-1-face haskell-constructor-face)) 67 74 (fontified t) 74 75 (fontified t face (rainbow-delimiters-depth-1-face)) 75 81 (fontified t) 81 82 (fontified t face (rainbow-delimiters-depth-1-face)) 82 83 (fontified t) 83 85 (fontified t syntax-table (1) face haskell-operator-face) 85 93 (fontified t) 93 94 (fontified t face (rainbow-delimiters-depth-1-face)) 94 108 (fontified t face haskell-constructor-face) 108 109 (fontified t) 109 110 (fontified t syntax-table (1) face haskell-operator-face) 110 128 (fontified t) 128 129 (fontified t face (rainbow-delimiters-depth-1-face)) 129 130 (fontified t) 130 131 (fontified t syntax-table (1) face font-lock-preprocessor-face) 131 136 (fontified t face font-lock-preprocessor-face) 136 137 (fontified t font-lock-multiline t face font-lock-preprocessor-face)) . 2443) (undo-tree-id110 . -137) (undo-tree-id111 . -137) 2580 (t 25848 53133 227961 812000)) nil (25848 53143 245172 0) 0 nil])
([nil nil ((#("#if __GLASGOW_HASKELL__ > 802" 0 1 (fontified t syntax-table (1) face font-lock-preprocessor-face) 1 24 (fontified t face font-lock-preprocessor-face) 24 25 (fontified t syntax-table (1) face font-lock-preprocessor-face) 25 26 (fontified t face font-lock-preprocessor-face) 26 29 (fontified t syntax-table (2) face font-lock-preprocessor-face)) . 2301) (undo-tree-id108 . -1) (undo-tree-id109 . -2)) nil (25848 53143 245169 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2300) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 2301) nil (25848 53143 245163 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-doc-face)) . -211) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 212 (t 25848 53143 247051 25000)) nil (25848 53287 628231 0) 0 nil])
([nil current ((211 . 212)) nil (25848 53287 628185 0) 0 nil])
nil
