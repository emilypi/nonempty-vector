name: ci
on:
  push:
    branches:
      - master
  pull_request: {} # Validate all PRs

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        ghc: ['9.4', '9.6', '9.8', '9.10', '9.12']
        include:
        - os: macOS-latest
          ghc: 'latest'
    steps:
    - uses: actions/checkout@v4
    - name: Install libncurses5 and libtinfo
      if: runner.os == 'Linux' && (matrix.ghc == '8.0' || matrix.ghc == '8.2')
      run: |
        sudo apt-get install libncurses5 libtinfo5
    - uses: haskell-actions/setup@v2
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-update: true  # This runs 'cabal update' automatically
    - uses: actions/cache@v4
      name: Cache cabal stuff
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal', 'cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-
    - name: Test
      run: |
        cabal sdist -z -o .
        cabal get nonempty-vector-*.tar.gz
        cd nonempty-vector-*/
        cabal build nonempty-vector:tests --enable-tests --enable-benchmarks
        cabal test --enable-tests --enable-benchmarks --test-show-details=direct all
    - name: Haddock
      run: |
        cd nonempty-vector-*/
        cabal haddock all
    - name: Cabal check
      run: |
        cd nonempty-vector-*/
        cabal check

  bounds-checking:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: haskell-actions/setup@v2
      id: setup-haskell-cabal
      with:
        ghc-version: 'latest'
        cabal-update: true
    - uses: actions/cache@v4
      name: Cache cabal stuff
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-latest-${{ hashFiles('**/*.cabal', 'cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-latest-
    - name: Test
      run: cabal test --ghc-options='-fcheck-prim-bounds -fno-ignore-asserts'