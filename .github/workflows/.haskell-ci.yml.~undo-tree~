(undo-tree-save-format-version . 1)
"f3a18129cc197d119d4dd26f7e61f5e19d52075e"
[nil nil nil nil (25848 53191 393982 0) 0 nil]
([nil nil ((1 . 2728) (t 25589 33256 370561 178000)) nil (25848 53191 393981 0) 0 nil])
([nil nil (("name: ci
on:
  push:
    branches:
      - master
  pull_request: {} # Validate all PRs

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        ghc: ['8.10', '9.0', '9.2', '9.4', '9.6']
        include:
        - os: macOS-latest
          ghc: 'latest'
    steps:
    - uses: actions/checkout@v3
    - name: Install libncurses5 and libtinfo
      if: runner.os == 'Linux' && (matrix.ghc == '8.0' || matrix.ghc == '8.2')
      run: |
        sudo apt-get install libncurses5 libtinfo5
    - uses: haskell/actions/setup@v2
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
    - name: Update cabal package database
      run: cabal update
    - uses: actions/cache@v2
      name: Cache cabal stuff
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}
    - name: Test
      run: |
        cabal sdist -z -o .
        cabal get base64-*.tar.gz
        cd base64-*/
        cabal build base64:tests --enable-tests --enable-benchmarks
        cabal test --enable-tests --enable-benchmarks --test-show-details=direct all
    - name: Bench
      run: |
        cd base64-*/
        cabal bench --enable-tests --enable-benchmarks --benchmark-option=-l all
    - name: Haddock
      run: |
        cd base64-*/
        cabal haddock all
    - name: Cabal check
      run: |
        cd base64-*/
        cabal check

  bounds-checking:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: haskell/actions/setup@v2
      id: setup-haskell-cabal
      with:
        ghc-version: 'latest'
    - name: Update cabal package database
      run: cabal update
    - uses: actions/cache@v2
      name: Cache cabal stuff
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-latest
    - name: Test
      run: cabal test --ghc-options='-fcheck-prim-bounds -fno-ignore-asserts'

  i386:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: i386/ubuntu:bionic
    steps:
    - name: Install
      run: |
        apt-get update -y
        apt-get install -y autoconf build-essential zlib1g-dev libgmp-dev curl libncurses5 libtinfo5 libncurses5-dev libtinfo-dev
        curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_INSTALL_NO_STACK=1 sh
    - uses: actions/checkout@v1
    - name: Test
      run: |
        source ~/.ghcup/env
        cabal update
        cabal test# This GitHub workflow config has been generated by a script via
#
#   haskell-ci 'github' 'cabal.project'
#
# To regenerate the script (for example after adjusting tested-with) run
#
#   haskell-ci regenerate
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.15.20230217
#
# REGENDATA (\"0.15.20230217\",[\"github\",\"cabal.project\"])
#
name: Haskell-CI
on:
  - push
  - pull_request
jobs:
  linux:
    name: Haskell-CI - Linux - ${{ matrix.compiler }}
    runs-on: ubuntu-20.04
    timeout-minutes:
      60
    container:
      image: buildpack-deps:bionic
    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        include:
          - compiler: ghc-9.4.4
            compilerKind: ghc
            compilerVersion: 9.4.4
            setup-method: ghcup
            allow-failure: false
          - compiler: ghc-9.2.6
            compilerKind: ghc
            compilerVersion: 9.2.6
            setup-method: ghcup
            allow-failure: false
          - compiler: ghc-9.0.2
            compilerKind: ghc
            compilerVersion: 9.0.2
            setup-method: ghcup
            allow-failure: false
          - compiler: ghc-8.10.7
            compilerKind: ghc
            compilerVersion: 8.10.7
            setup-method: ghcup
            allow-failure: false
      fail-fast: false
    steps:
      - name: apt
        run: |
          apt-get update
          apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git software-properties-common libtinfo5
          mkdir -p \"$HOME/.ghcup/bin\"
          curl -sL https://downloads.haskell.org/ghcup/0.1.18.0/x86_64-linux-ghcup-0.1.18.0 > \"$HOME/.ghcup/bin/ghcup\"
          chmod a+x \"$HOME/.ghcup/bin/ghcup\"
          \"$HOME/.ghcup/bin/ghcup\" config add-release-channel https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-prereleases-0.0.7.yaml;
          \"$HOME/.ghcup/bin/ghcup\" install ghc \"$HCVER\" || (cat \"$HOME\"/.ghcup/logs/*.* && false)
          \"$HOME/.ghcup/bin/ghcup\" install cabal 3.9.0.0 || (cat \"$HOME\"/.ghcup/logs/*.* && false)
        env:
          HCKIND: ${{ matrix.compilerKind }}
          HCNAME: ${{ matrix.compiler }}
          HCVER: ${{ matrix.compilerVersion }}
      - name: Set PATH and environment variables
        run: |
          echo \"$HOME/.cabal/bin\" >> $GITHUB_PATH
          echo \"LANG=C.UTF-8\" >> \"$GITHUB_ENV\"
          echo \"CABAL_DIR=$HOME/.cabal\" >> \"$GITHUB_ENV\"
          echo \"CABAL_CONFIG=$HOME/.cabal/config\" >> \"$GITHUB_ENV\"
          HCDIR=/opt/$HCKIND/$HCVER
          HC=$HOME/.ghcup/bin/$HCKIND-$HCVER
          echo \"HC=$HC\" >> \"$GITHUB_ENV\"
          echo \"HCPKG=$HOME/.ghcup/bin/$HCKIND-pkg-$HCVER\" >> \"$GITHUB_ENV\"
          echo \"HADDOCK=$HOME/.ghcup/bin/haddock-$HCVER\" >> \"$GITHUB_ENV\"
          echo \"CABAL=$HOME/.ghcup/bin/cabal-3.9.0.0 -vnormal+nowrap\" >> \"$GITHUB_ENV\"
          HCNUMVER=$(${HC} --numeric-version|perl -ne '/^(\\d+)\\.(\\d+)\\.(\\d+)(\\.(\\d+))?$/; print(10000 * $1 + 100 * $2 + ($3 == 0 ? $5 != 1 : $3))')
          echo \"HCNUMVER=$HCNUMVER\" >> \"$GITHUB_ENV\"
          echo \"ARG_TESTS=--enable-tests\" >> \"$GITHUB_ENV\"
          echo \"ARG_BENCH=--enable-benchmarks\" >> \"$GITHUB_ENV\"
          echo \"HEADHACKAGE=false\" >> \"$GITHUB_ENV\"
          echo \"ARG_COMPILER=--$HCKIND --with-compiler=$HC\" >> \"$GITHUB_ENV\"
          echo \"GHCJSARITH=0\" >> \"$GITHUB_ENV\"
        env:
          HCKIND: ${{ matrix.compilerKind }}
          HCNAME: ${{ matrix.compiler }}
          HCVER: ${{ matrix.compilerVersion }}
      - name: env
        run: |
          env
      - name: write cabal config
        run: |
          mkdir -p $CABAL_DIR
          cat >> $CABAL_CONFIG <<EOF
          remote-build-reporting: anonymous
          write-ghc-environment-files: never
          remote-repo-cache: $CABAL_DIR/packages
          logs-dir:          $CABAL_DIR/logs
          world-file:        $CABAL_DIR/world
          extra-prog-path:   $CABAL_DIR/bin
          symlink-bindir:    $CABAL_DIR/bin
          installdir:        $CABAL_DIR/bin
          build-summary:     $CABAL_DIR/logs/build.log
          store-dir:         $CABAL_DIR/store
          install-dirs user
            prefix: $CABAL_DIR
          repository hackage.haskell.org
            url: http://hackage.haskell.org/
          EOF
          cat >> $CABAL_CONFIG <<EOF
          program-default-options
            ghc-options: $GHCJOBS +RTS -M3G -RTS
          EOF
          cat $CABAL_CONFIG
      - name: versions
        run: |
          $HC --version || true
          $HC --print-project-git-commit-id || true
          $CABAL --version || true
      - name: update cabal index
        run: |
          $CABAL v2-update -v
      - name: install cabal-plan
        run: |
          mkdir -p $HOME/.cabal/bin
          curl -sL https://github.com/haskell-hvr/cabal-plan/releases/download/v0.6.2.0/cabal-plan-0.6.2.0-x86_64-linux.xz > cabal-plan.xz
          echo 'de73600b1836d3f55e32d80385acc055fd97f60eaa0ab68a755302685f5d81bc  cabal-plan.xz' | sha256sum -c -
          xz -d < cabal-plan.xz > $HOME/.cabal/bin/cabal-plan
          rm -f cabal-plan.xz
          chmod a+x $HOME/.cabal/bin/cabal-plan
          cabal-plan --version
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: source
      - name: initial cabal.project for sdist
        run: |
          touch cabal.project
          echo \"packages: $GITHUB_WORKSPACE/source/.\" >> cabal.project
          cat cabal.project
      - name: sdist
        run: |
          mkdir -p sdist
          $CABAL sdist all --output-dir $GITHUB_WORKSPACE/sdist
      - name: unpack
        run: |
          mkdir -p unpacked
          find sdist -maxdepth 1 -type f -name '*.tar.gz' -exec tar -C $GITHUB_WORKSPACE/unpacked -xzvf {} \\;
      - name: generate cabal.project
        run: |
          PKGDIR_nonempty_vector=\"$(find \"$GITHUB_WORKSPACE/unpacked\" -maxdepth 1 -type d -regex '.*/nonempty-vector-[0-9.]*')\"
          echo \"PKGDIR_nonempty_vector=${PKGDIR_nonempty_vector}\" >> \"$GITHUB_ENV\"
          rm -f cabal.project cabal.project.local
          touch cabal.project
          touch cabal.project.local
          echo \"packages: ${PKGDIR_nonempty_vector}\" >> cabal.project
          echo \"package nonempty-vector\" >> cabal.project
          echo \"    ghc-options: -Werror=missing-methods\" >> cabal.project
          cat >> cabal.project <<EOF
          EOF
          $HCPKG list --simple-output --names-only | perl -ne 'for (split /\\s+/) { print \"constraints: $_ installed\\n\" unless /^(nonempty-vector)$/; }' >> cabal.project.local
          cat cabal.project
          cat cabal.project.local
      - name: dump install plan
        run: |
          $CABAL v2-build $ARG_COMPILER $ARG_TESTS $ARG_BENCH --dry-run all
          cabal-plan
      - name: restore cache
        uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ github.sha }}
          path: ~/.cabal/store
          restore-keys: ${{ runner.os }}-${{ matrix.compiler }}-
      - name: install dependencies
        run: |
          $CABAL v2-build $ARG_COMPILER --disable-tests --disable-benchmarks --dependencies-only -j2 all
          $CABAL v2-build $ARG_COMPILER $ARG_TESTS $ARG_BENCH --dependencies-only -j2 all
      - name: build w/o tests
        run: |
          $CABAL v2-build $ARG_COMPILER --disable-tests --disable-benchmarks all
      - name: build
        run: |
          $CABAL v2-build $ARG_COMPILER $ARG_TESTS $ARG_BENCH all --write-ghc-environment-files=always
      - name: tests
        run: |
          $CABAL v2-test $ARG_COMPILER $ARG_TESTS $ARG_BENCH all --test-show-details=direct
      - name: cabal check
        run: |
          cd ${PKGDIR_nonempty_vector} || false
          ${CABAL} -vnormal check
      - name: haddock
        run: |
          $CABAL v2-haddock --disable-documentation --haddock-all $ARG_COMPILER --with-haddock $HADDOCK $ARG_TESTS $ARG_BENCH all
      - name: unconstrained build
        run: |
          rm -f cabal.project.local
          $CABAL v2-build $ARG_COMPILER --disable-tests --disable-benchmarks all
      - name: save cache
        uses: actions/cache/save@v3
        if: always()
        with:
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ github.sha }}
          path: ~/.cabal/store
" . 1) (undo-tree-id0 . -11102) (undo-tree-id1 . -11102) (undo-tree-id2 . -3149) (undo-tree-id3 . -3149) (undo-tree-id4 . -3149) (undo-tree-id5 . -3149) (undo-tree-id6 . -3149) (undo-tree-id7 . -3149) (undo-tree-id8 . -3149) (undo-tree-id9 . -3149) (undo-tree-id10 . -3149) (undo-tree-id11 . -3149) (undo-tree-id12 . -3149) (undo-tree-id13 . -3149) (undo-tree-id14 . -3149) (undo-tree-id15 . -3149) (undo-tree-id16 . -3149) (undo-tree-id17 . -3149) (undo-tree-id18 . -3149) (undo-tree-id19 . -3149) (undo-tree-id20 . -3149) (undo-tree-id21 . -3149) (undo-tree-id22 . -3149) (undo-tree-id23 . -3149) (undo-tree-id24 . -3149) (undo-tree-id25 . -3149) (undo-tree-id26 . -3149) (undo-tree-id27 . -3149) (undo-tree-id28 . -3149) (undo-tree-id29 . -3149) (undo-tree-id30 . -3149) (undo-tree-id31 . -3149) (undo-tree-id32 . -3149) (undo-tree-id33 . -3149) (undo-tree-id34 . -3149) (undo-tree-id35 . -3149) (undo-tree-id36 . -3149) (undo-tree-id37 . -3149) (undo-tree-id38 . -3149) (undo-tree-id39 . -3149) (undo-tree-id40 . -3149) (undo-tree-id41 . -3149) (undo-tree-id42 . -3149) (undo-tree-id43 . -3149) (undo-tree-id44 . -3149) (undo-tree-id45 . -3149) (undo-tree-id46 . -3149) (undo-tree-id47 . -3149) (undo-tree-id48 . -3149) (undo-tree-id49 . -3149) (undo-tree-id50 . -3149) (undo-tree-id51 . -3149) (undo-tree-id52 . -3149) (undo-tree-id53 . -3149) (undo-tree-id54 . -3149) (undo-tree-id55 . -3149) (undo-tree-id56 . -3149) (undo-tree-id57 . -3149) (undo-tree-id58 . -3149) (undo-tree-id59 . -3149) (undo-tree-id60 . -3149) (undo-tree-id61 . -3149) (undo-tree-id62 . -3149) (undo-tree-id63 . -3149) (undo-tree-id64 . -3149) (undo-tree-id65 . -3149) (undo-tree-id66 . -3149) (undo-tree-id67 . -3149) (undo-tree-id68 . -3149) (undo-tree-id69 . -3149) (undo-tree-id70 . -3149) (undo-tree-id71 . -3149) (undo-tree-id72 . -3149) (undo-tree-id73 . -3149) (undo-tree-id74 . -3149) (undo-tree-id75 . -3149) (undo-tree-id76 . -3149) (undo-tree-id77 . -3149) (undo-tree-id78 . -3149) (undo-tree-id79 . -3149) (undo-tree-id80 . -3149) (undo-tree-id81 . -3149) (undo-tree-id82 . -3149) (undo-tree-id83 . -3149) (undo-tree-id84 . -3149) (undo-tree-id85 . -3149) (undo-tree-id86 . -3149) (undo-tree-id87 . -3149) (undo-tree-id88 . -3149) (undo-tree-id89 . -3149) (undo-tree-id90 . -3149) (undo-tree-id91 . -3149) (undo-tree-id92 . -3149) (undo-tree-id93 . -3149) (undo-tree-id94 . -3149) (undo-tree-id95 . -3149) (undo-tree-id96 . -3149) (undo-tree-id97 . -3149) (undo-tree-id98 . -3149) (undo-tree-id99 . -3149) (undo-tree-id100 . -3149) (undo-tree-id101 . -3149) (undo-tree-id102 . -3149) (undo-tree-id103 . -3149) (undo-tree-id104 . -3149) (undo-tree-id105 . -3149) (undo-tree-id106 . -3149) (undo-tree-id107 . -3149) (undo-tree-id108 . -3149) (undo-tree-id109 . -3149) (undo-tree-id110 . -3149) (undo-tree-id111 . -3149) (undo-tree-id112 . -3149) (undo-tree-id113 . -3149) (undo-tree-id114 . -3149) (undo-tree-id115 . -3149) (undo-tree-id116 . -3149) (undo-tree-id117 . -3149) (undo-tree-id118 . -3149) (undo-tree-id119 . -3149) (undo-tree-id120 . -3149) (undo-tree-id121 . -3149) (undo-tree-id122 . -3149) (undo-tree-id123 . -3149) (undo-tree-id124 . -3149) (undo-tree-id125 . -3149) (undo-tree-id126 . -3149) (undo-tree-id127 . -3149) (undo-tree-id128 . -3149) (undo-tree-id129 . -3149) (undo-tree-id130 . -3149) (undo-tree-id131 . -3149) (undo-tree-id132 . -3149) (undo-tree-id133 . -3149) (undo-tree-id134 . -3149) (undo-tree-id135 . -3149) (undo-tree-id136 . -3149) (undo-tree-id137 . -3149) (undo-tree-id138 . -3149) (undo-tree-id139 . -3149) (undo-tree-id140 . -3149) (undo-tree-id141 . -3149) (undo-tree-id142 . -3149) (undo-tree-id143 . -3149) (undo-tree-id144 . -3149) (undo-tree-id145 . -3149) (undo-tree-id146 . -3149) (undo-tree-id147 . -3149) (undo-tree-id148 . -3149) (undo-tree-id149 . -3149) (undo-tree-id150 . -3149) (undo-tree-id151 . -3149) (undo-tree-id152 . -3149) (undo-tree-id153 . -3149) (undo-tree-id154 . -3149) (undo-tree-id155 . -3149) (undo-tree-id156 . -3149) (undo-tree-id157 . -3149) (undo-tree-id158 . -3149) (undo-tree-id159 . -3149) (undo-tree-id160 . -3149) (undo-tree-id161 . -3149) (undo-tree-id162 . -3149) (undo-tree-id163 . -3149) (undo-tree-id164 . -3149) (undo-tree-id165 . -3149) (undo-tree-id166 . -3149) (undo-tree-id167 . -3149) (undo-tree-id168 . -3149) (undo-tree-id169 . -3149) (undo-tree-id170 . -3149) (undo-tree-id171 . -3149) (undo-tree-id172 . -3149) (undo-tree-id173 . -3149) (undo-tree-id174 . -3149) (undo-tree-id175 . -3149) (undo-tree-id176 . -3149) (undo-tree-id177 . -3149) (undo-tree-id178 . -3149) (undo-tree-id179 . -3149) (undo-tree-id180 . -3149) (undo-tree-id181 . -3149) (undo-tree-id182 . -3149) (undo-tree-id183 . -3149) (undo-tree-id184 . -3149) (undo-tree-id185 . -3149) (undo-tree-id186 . -3149) (undo-tree-id187 . -3149) (undo-tree-id188 . -3149) (undo-tree-id189 . -3149) (undo-tree-id190 . -3149) (undo-tree-id191 . -3149) (undo-tree-id192 . -3149) (undo-tree-id193 . -3149) (undo-tree-id194 . -3149) (undo-tree-id195 . -3149) (undo-tree-id196 . -3149) (undo-tree-id197 . -3149) (undo-tree-id198 . -3149) (undo-tree-id199 . -3149) (undo-tree-id200 . -3149) (undo-tree-id201 . -3149) (undo-tree-id202 . -3149) (undo-tree-id203 . -3149) (undo-tree-id204 . -3149) (undo-tree-id205 . -3149) (undo-tree-id206 . -3149) (undo-tree-id207 . -3149) (undo-tree-id208 . -3149) (undo-tree-id209 . -3149) (undo-tree-id210 . -3149) (undo-tree-id211 . -3149) (undo-tree-id212 . -3149) (undo-tree-id213 . -3149) (undo-tree-id214 . -3149) (undo-tree-id215 . -3149) (undo-tree-id216 . -3149) (undo-tree-id217 . -3149) (undo-tree-id218 . -3149) (undo-tree-id219 . -3149) (undo-tree-id220 . -3149) (undo-tree-id221 . -3149) (undo-tree-id222 . -3149) (undo-tree-id223 . -3149) (undo-tree-id224 . -3149) (undo-tree-id225 . -3149) (undo-tree-id226 . -3149) (undo-tree-id227 . -3149) (undo-tree-id228 . -3149) (undo-tree-id229 . -3149) (undo-tree-id230 . -3149) (undo-tree-id231 . -3149) (undo-tree-id232 . -3149) (undo-tree-id233 . -3149) (undo-tree-id234 . -3149) (undo-tree-id235 . -3149) (undo-tree-id236 . -3149) (undo-tree-id237 . -3149) (undo-tree-id238 . -3149) (undo-tree-id239 . -3149) (undo-tree-id240 . -3149) (undo-tree-id241 . -3149) (undo-tree-id242 . -3149) (undo-tree-id243 . -3149) (undo-tree-id244 . -3149) (undo-tree-id245 . -3149) (undo-tree-id246 . -3149) (undo-tree-id247 . -3149) (undo-tree-id248 . -3149) (undo-tree-id249 . -3149) (undo-tree-id250 . -3149) (undo-tree-id251 . -3149) (undo-tree-id252 . -3149) (undo-tree-id253 . -3149) (undo-tree-id254 . -3149) (undo-tree-id255 . -3149) (undo-tree-id256 . -3149) (undo-tree-id257 . -3149) (undo-tree-id258 . -3149) (undo-tree-id259 . -3149) (undo-tree-id260 . -3149) (undo-tree-id261 . -3149) (undo-tree-id262 . -3149) (undo-tree-id263 . -3149) (undo-tree-id264 . -3149) (undo-tree-id265 . -3149) (undo-tree-id266 . -3149) (undo-tree-id267 . -3149) (undo-tree-id268 . -3149) (undo-tree-id269 . -3149) (undo-tree-id270 . -3149) (undo-tree-id271 . -3149) (undo-tree-id272 . -3149) (undo-tree-id273 . -3149) (undo-tree-id274 . -3149) (undo-tree-id275 . -3149) (undo-tree-id276 . -3149) (undo-tree-id277 . -3149) (undo-tree-id278 . -3149) (undo-tree-id279 . -3149) (undo-tree-id280 . -3149) (undo-tree-id281 . -3149) (undo-tree-id282 . -3149) (undo-tree-id283 . -3149) (undo-tree-id284 . -3149) (undo-tree-id285 . -3149) (undo-tree-id286 . -3149) (undo-tree-id287 . -3149) (undo-tree-id288 . -3149) (undo-tree-id289 . -3149) (undo-tree-id290 . -3149) (undo-tree-id291 . -3149) (undo-tree-id292 . -3149) (undo-tree-id293 . -3149) (undo-tree-id294 . -3149) (undo-tree-id295 . -3149) (undo-tree-id296 . -3149) (undo-tree-id297 . -3149) (undo-tree-id298 . -3149) (undo-tree-id299 . -3149) (undo-tree-id300 . -3149) (undo-tree-id301 . -3149) (undo-tree-id302 . -3149) (undo-tree-id303 . -3149) (undo-tree-id304 . -3149) (undo-tree-id305 . -3149) (undo-tree-id306 . -3149) (undo-tree-id307 . -3149) (undo-tree-id308 . -3149) (undo-tree-id309 . -3149) (undo-tree-id310 . -3149) (undo-tree-id311 . -3149) (undo-tree-id312 . -3149) (undo-tree-id313 . -3149) (undo-tree-id314 . -3149) (undo-tree-id315 . -3149) (undo-tree-id316 . -3149) (undo-tree-id317 . -3149) (undo-tree-id318 . -3149) (undo-tree-id319 . -3149) (undo-tree-id320 . -3149) (undo-tree-id321 . -3149) (undo-tree-id322 . -3149) (undo-tree-id323 . -3149) (undo-tree-id324 . -3149) (undo-tree-id325 . -3149) (undo-tree-id326 . -3149) (undo-tree-id327 . -3149) (undo-tree-id328 . -3149) (undo-tree-id329 . -3149) (undo-tree-id330 . -3149) (undo-tree-id331 . -3149) (undo-tree-id332 . -3149) (undo-tree-id333 . -3149) (undo-tree-id334 . -3149) (undo-tree-id335 . -3149) (undo-tree-id336 . -3149) (undo-tree-id337 . -11102) (undo-tree-id338 . -3149) (undo-tree-id339 . -11102) (undo-tree-id340 . -2727) (undo-tree-id341 . -2727) (undo-tree-id342 . -2727) (undo-tree-id343 . -2727) (undo-tree-id344 . -2727) (undo-tree-id345 . -2727) (undo-tree-id346 . -2727) (undo-tree-id347 . -2727) (undo-tree-id348 . -2727) (undo-tree-id349 . -2727) (undo-tree-id350 . -2727) (undo-tree-id351 . -2727) (undo-tree-id352 . -2727) (undo-tree-id353 . -2727) (undo-tree-id354 . -2727) (undo-tree-id355 . -2727) (undo-tree-id356 . -2727) (undo-tree-id357 . -2727) (undo-tree-id358 . -2727) (undo-tree-id359 . -2727) (undo-tree-id360 . -2727) (undo-tree-id361 . -2727) (undo-tree-id362 . -2727) (undo-tree-id363 . -2727) (undo-tree-id364 . -2727) (undo-tree-id365 . -2727) (undo-tree-id366 . -2727) (undo-tree-id367 . -2727) (undo-tree-id368 . -11102)) nil (25848 53191 393968 0) 0 nil])
([nil nil ((1 . 2728)) nil (25848 53191 393719 0) 0 nil])
([nil current (("base64" . -1574) (1580 . 1595) ("base64" . -1481) (1487 . 1502) ("base64" . -1337) (1343 . 1358) ("base64" . -1153) (1159 . 1174) ("base64" . -1114) (1120 . 1135) ("base64" . -1078) (t 25848 53191 396426 246000) (1084 . 1099) 127 (t 25848 53191 396426 246000)) nil (25848 53221 717293 0) 0 nil])
nil
